services:
  # 显存优化的SGLang服务器
  mineru-sglang:
    image: mineru-sglang:latest
    container_name: mineru-sglang-server
    restart: always
    profiles: ["sglang-server"]
    ports:
      - "30010:30010"
    environment:
      MINERU_MODEL_SOURCE: local
      MINERU_VIRTUAL_VRAM_SIZE: 8
      MINERU_DEVICE_MODE: cuda
      PYTORCH_CUDA_ALLOC_CONF: max_split_size_mb:128
      CUDA_LAUNCH_BLOCKING: 1
    entrypoint: mineru-sglang-server
    command:
      - --host
      - 0.0.0.0
      - --port
      - "30010"
      - --mem-fraction-static
      - "0.4"
    ulimits:
      memlock: -1
      stack: 67108864
    ipc: host
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:30010/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ["0"]
              capabilities: [gpu]
        limits:
          memory: 10G
    volumes:
      - ./models:/app/models:ro
      - ./logs:/app/logs

  # 显存优化的Gradio界面
  mineru-gradio-prod:
    image: mineru-sglang:latest
    container_name: mineru-gradio-prod
    restart: always
    profiles: ["gradio"]
    ports:
      - "7861:7861"
    environment:
      MINERU_MODEL_SOURCE: local
      MINERU_VIRTUAL_VRAM_SIZE: 6
      MINERU_DEVICE_MODE: cuda
      PYTORCH_CUDA_ALLOC_CONF: max_split_size_mb:128
      CUDA_LAUNCH_BLOCKING: 1
    entrypoint: ["/bin/bash", "-c"]
    command: >
      "echo 'Starting auth gradio app on port 7861...' &&
       python /usr/local/lib/python3.10/dist-packages/mineru/cli/gradio_app_with_auth.py --server-name 0.0.0.0 --server-port 7861"
    ulimits:
      memlock: -1
      stack: 67108864
    ipc: host
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ["0"]
              capabilities: [gpu]
        limits:
          memory: 8G
    volumes:
      - ./models:/app/models:ro
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ../mineru/cli/gradio_app_with_auth.py:/usr/local/lib/python3.10/dist-packages/mineru/cli/gradio_app_with_auth.py:ro
      - ../mineru/cli/gradio_app.py:/usr/local/lib/python3.10/dist-packages/mineru/cli/gradio_app.py:ro

  # 轻量级API服务（可选）
  mineru-api-light:
    image: mineru-sglang:latest
    container_name: mineru-api-light
    restart: always
    profiles: ["api-light"]
    ports:
      - "8200:8200"
    environment:
      MINERU_MODEL_SOURCE: local
      MINERU_VIRTUAL_VRAM_SIZE: 4
      MINERU_DEVICE_MODE: cuda
    entrypoint: mineru-api
    command:
      - --host
      - 0.0.0.0
      - --port
      - "8200"
      - --enable-sglang-engine
      - "true"
    ulimits:
      memlock: -1
      stack: 67108864
    ipc: host
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ["0"]
              capabilities: [gpu]
        limits:
          memory: 6G
    volumes:
      - ./models:/app/models:ro
      - ./logs:/app/logs
    depends_on:
      - mineru-sglang

  # 开发环境Gradio服务（合并自docker-compose-dev.yaml）
  

networks:
  default:
    name: mineru-optimized-network
    driver: bridge

volumes:
  models:
    driver: local
  logs:
    driver: local
  uploads:
    driver: local
  output:
    driver: local
